Питання Величка Дмитра
1.	Що таке TypeScript?  
TypeScript - це строго типізована і компілювана мова, чим, можливо, буде ближче до програмістів Java, C# та інших типових мов. Хоча на виході компілятор створює той самий JavaScript, який потім виконується браузером.
2.	Як оголошуються змінні та константи в TypeScript? 
Для визначення змінних можна використовувати ключове слово var :
	var z;  
Інший спосіб визначення змінної застосовує ключове слово let.
	let z;
3.	Які існують типи даних в TypeScript? 
У TypeScript є такі базові типи:
•	boolean : логічне значення true чи false
•	number : числове значення
•	string : рядки
•	Array : масиви
•	кортежі
•	Enum : перерахування
•	Any : довільний тип
•	Symbol
•	null і undefined : відповідають значенням null і undefined у javascript
•	Never : також представляє відсутність значення і використовується як тип функцій, що повертаються, які генерують або повертають помилку
4.	Як створюються функції? 
Визначення функції
TypeScript також визначає функцію за допомогою ключового слова function, але додає додаткові можливості по роботі з функціями. Зокрема, тепер ми можемо визначити тип параметрів, що передаються, і тип значення, що повертається.
Параметри функції
Функція може мати параметри, які вказуються після назви функції у дужках через кому.
Результат функції
Функція може повертати значення певного типу, який називається типом функції. Тип функції, що повертається, ставиться після списку параметрів через двокрапку:
5.	Що собою являють котежі, масиви, enum? 
Масиви визначаються за допомогою виразу [] та також є строго типізованими.
Альтернативний спосіб визначення масивів представляє застосування типу Array<>, де у фігурних дужках вказується тип елементів масиву.
Але фактично такі форми масивів, як number[]або string[]є скороченням відповідно до типів Array<number>абоArray<string>
Кортежі (Tuples), як і масиви, представляють набір елементів, котрим заздалегідь відомий тип. На відміну від масивів кортежі можуть зберігати значення різних типів. Для визначення кортежу застосовується синтаксис масиву:

	let user: [string, number];
Тип enum або перерахування дозволяє визначити набір саме ванних констант, які описують певні стани.
Для визначення переліку застосовується ключове слово enum 
6.	Що собою являє клас? 
TypeScript реалізує об'єктно-орієнтований підхід, у ньому є повноцінна підтримка класів. Клас представляє шаблон для створення об'єктів та інкапсулює функціональність, яку повинен мати об'єкт. Клас визначає стан та поведінку, якими володіє об'єкт.
7.	За допомогою чого виконують початкову ініціалізацію об'єкта? 
Крім звичайних методів класи мають спеціальні функції – конструктори, які визначаються за допомогою ключового слова constructor . Конструктори виконують початкову ініціалізацію об'єкта.
8.	Що таке успадкування? 
Одним із ключових моментів об'єктно-орієнтованої парадигми є успадкування. У TypeScript успадкування реалізується за допомогою ключового слова extends (як Java).
Клас Employee, який представляє працівника, є підкласом чи успадковується від класу Person. А клас Person називається батьківським чи базовим класом. При наслідуванні клас Employee переймає весь функціонал класу Person - всі його властивості та функції і може їх використовувати. І також можна визначити у підкласі нові властивості та методи, яких немає у класі Person.
9.	Для чого потрібні модифікатори доступу? 
Модифікатори доступу дозволяють приховати стан об'єкта від зовнішнього доступу та керувати доступом до цього стану. У TypeScript три модифікатори: public , protected і private.
10.	Що таке інтерфейс? Як його використовують? 
Інтерфейс визначає властивості та методи, які об'єкт має реалізувати. Іншими словами, інтерфейс – це визначення кастомного типу даних, але без реалізації. У цьому випадку інтерфейси TS схожі на інтерфейси в мовах Java і C#. Інтерфейси визначаються за допомогою ключового слова interface . 

Питання Кравця Владислава
1. Що таке веб-розробка
Веброзробка — процес створення вебсайтів або вебдодатків. Основними етапами процесу є вебдизайн, верстка сторінок, програмування для веб на стороні клієнта і сервера, а також конфігурування вебсервера.

2. Типи веб-розробок.
Можна виділити такі види веб-розробки:
frontend;
backend;
fullstack.

3. Що таке Backend.
Бекенд – це внутрішня, прихована від користувача начинка сайту або веб-програми. Іншими словами, це частина сервісу, яка працює на віддаленому сервері, а не у браузері чи персональному комп’ютері. Бекенд обробляє і постачає користувачеві дані, які потім відображає фронтенд: так називають інтерфейс користувача, видиму частину сайту або програми, яка працює на вашому пристрої.

4. Що таке Frontend
Frontend – це публічна частина web-додатків (веб-сайтів), з якою користувач може взаємодіяти і контактувати напряму. У Frontend входить відображення функціональних завдань призначеного для користувача інтерфейсу, що виконуються на стороні клієнта, а також обробка запитів користувачів. По суті, фронтенд – це все те, що бачить користувач при відкритті web-сторінки

5. Frontend і Backend розробка –   відмінності і взаємодія між собою
Backend – це програмно-апаратна частина проекту,  Frontend ж є клієнтською стороною призначеного для користувача інтерфейсу до програмно-апаратної частини проекту, тобто до бекенду. Іншими словами бекенд – це все те, що відбувається на стороні сервера і що залишається невидимим користувачеві (сам сервер теж є частиною бекенду, тільки апаратного). Звідси і назва front – це видиме спереду, back – це те, що приховано позаду, невидиме.

Бекенд-розробники мають справу з серверними мовами програмування, такими як Java, Python, PHP, Ruby та інші. Також бекендери повинні знати бази даних, архітектуру, до всього іншого їм знадобляться знання апаратної частини бекенд, тобто сервера, його можливості і характеристики. Бекенд-розробники, як правило, не мають відношення ні з чим, що безпосередньо взаємодіє з користувачем, вони не розбираються в призначених для користувача інтерфейсах UI і не заглиблюються в призначений для користувача досвід взаємодії UX, або в верстку сторінки, хоча загальне розуміння всього цього мають. Вони працюють, в основному, з точним аналізом і обчисленнями, де майже немає творчої, гуманітарної складової. При цьому, їм потрібно вміти обчислювати всі можливі наслідки операцій та розуміти причини помилок, що з’явилися на шляху клієнт-сервер-клієнт.

Процес взаємодії frontend і backend: фронтенд відправляє призначену для користувача інформацію в бекенд; інформація обробляється; інформація повертається назад, прийнявши цілісну форму і виконавши оброблений запит. Всі ці завдання виконує кілька фахівців одночасно, це завжди взаємодоповнююча командна робота. 
Варіанти взаємодії frontend і backend: HTTP-запит відправляється на сервер, сервер в процесі пошуку інформації, вбудовує її в шаблон і повертає назад у вигляді HTML-сторінки. Випадок із застосуванням інструментарію AJAX (Asynchronous JavaScript and XML). В даному випадку запит відправляє JavaScript, який завантажений в браузер, відповідь же приходить в форматі XML або JSON. Односторінкові додатки, які завантажують дані без оновлення сторінок. Це робиться за допомогою AJAX або фреймворків Angular і Ember. Ember або бібліотека React надають допомогу у використанні програми і в клієнтській частині і на сервері. Frontend і backend взаємодіють через AJAX і HTML-код, який обробляється на сервері. Робота і обов’язки frontend і backend девелоперів найчастіше розділені, але іноді виникає необхідність у програміста вирішувати проблеми як на стороні сервера, так і в клієнтської частини. Досить часто можна зустріти фахівців, які можуть поєднувати frontend і backend, вони абсолютно впевнено себе почувають як з однієї так і з іншої точки зору.

6. Хто такий Full-Stack developer?
Full-Stack developer – це розробник, який бере участь у всіх етапах розробки веб-додатків. Він розуміє все, що потрібно для створення програми, і Frontend, і Backend. Фронтенд-розробка включає в себе видиму частину проекту, з якою взаємодіють користувачі (інтерфейс користувача). Бекенд є тим місцем, де відбувається все справжнє диво. Це частина, яка включає бізнес-логіку (як функціонує система, і як дані проходять через серію завдань), як зберігаються дані і де виконується рішення. Теоретично фулл-стек розробник багато може зробити сам і в усьому розуміється. Ось такий і читець, і жнець і на дуді гравець.

7. Що таке URL адреса?
URL - це адреса, який має будь-який мережевий ресурс і який можна використовувати для роботи в Інтернеті.
URL складається з назви веб-сайту та шляхи. Шлях показує, де файл можна знайти на сервері.
Окремі компоненти для URL:
Субдомен (також домен третього рівня): може зробити інтернет-сторінки більш зрозумілими.
Домен другого рівня: часто ця назва компанії.
Домен верхнього рівня: він часто показує значення або походження інтернет-адреси.
Шлях: вказує на каталоги веб-сервера. Це означає, що він показує, де саме знаходиться сайт на сервері.
URL завжди структурований однаково. Він складається з різних компонентів, які стандартизовані в усьому світі.

8. Що таке інтернет?
Інтернет - всесвітня система взаємосполучених комп'ютерних мереж, побудована на використанні протоколу IP і маршрутизації пакетів даних. І. утворює глобальний інформаційний простір, слугує фізичною основою для Всесвітньої павутини (World Wide Web, WWW) і великої кількості інших систем передачі даних.

9. Що таке w3c?
Консорціум Всесвітнього павутиння (англ. World Wide Web Consortium, W3C) — головна міжнародна організація, що розробляє й впроваджує технологічні стандарти для Всесвітнього павутиння. Заснована 1994 року Тімом Бернерсом-Лі, — винахідником Всесвітнього павутиння, що він його очолює. 
Прикладами стандартів консорціуму є HTML, XML, CSS, SVG, RSS та WCAG. Хоча юридично W3C не є міжнародно визнаною організацією стандартизації, однак її стандарти є загальновизнаними і, що характерно, — вільними від будь-яких платних запатентованих технологій.

10. Що таке веб-браузер?
веб-браузер - програмне забезпечення для комп'ютера або іншого електронного пристрою, як правило, під'єднаного до Інтернету, що дає можливість користувачеві взаємодіяти з текстом, малюнками або іншою інформацією на гіпертекстовій вебсторінці. Тексти та малюнки можуть містити посилання на інші вебсторінки, розташовані на тому ж вебсайті або на інших вебсайтах. Вебпереглядач з допомогою гіперпосилань дозволяє користувачеві швидко та просто отримувати інформацію, розміщену на багатьох вебсторінках.

Питання Веретільника Віталія
1.	Що таке NFT?
NFT «невзаємозамінний токен», тобто неповторний і існує в єдиному екземплярі, його не можна розділити, а вся інформація про його автора, покупця і всі операції з ним надійно зберігається в блокчейні.
2.	Як протоколи Web 3.0 забезпечує децентралізацію?
Вони використовують різні токени(крипту), як винагороду, для заохочення учасників стати частиною мережі, зробити свій цифровий внесок у стабільність мережі.
3.	Що таке Web 3.0?
Web 3.0 - це концепція використання Інтернету масовим користувачем у найближчому майбутньому з огляду на активний розвиток та впровадження технологій, заснованих на блокчейні.
4.	Що таке Web 2.0?
Web 2.0 - друге покоління інтернету, яке почало поширення на початку 2000-х. Основу Web 2.0 становлять інтерактивні платформи та сервіси, підключені до Всесвітньої мережі. На відміну від першого покоління, сайти стали веб-додатками, які можуть самостійно використовувати користувачі. Пізніше до цього додалися соціальні мережі та система хмарних сервісів. 
5.	Що таке Web 1.0?
Web 1.0 — це перша версія «Всесвітньої мережі» (World Wide Web), яка почала набувати популярності на початку 90-х після впровадження протоколу комунікації та HTTP. Сайти цієї версії являли собою статичні сторінки з текстом, посиланнями та зображеннями. За словами Тіма Бернерса-Лі, якого називають автором Мережі, сайти Web 1.0 були доступні лише для читання. Взаємодія з сайтами обмежувалася найпростішими формами комунікації, такими як форуми.
6.	Що таке метасвіт у Web 3.0?
Метавсесвіт - це іммерсивний тривимірний простір з доповненою, віртуальною та змішаною реальністю, що дозволяє користувачам взаємодіяти з 3D-об'єктами.
Його мета – створити віртуальну копію реального світу з виділеними просторами для роботи, ігор та громадської діяльності. Всі ці простори взаємодіятимуть один з одним, а метавсесвіт буде розміщений на блокчейні, щоб його не контролював один суб'єкт.
 
7.	Які є характеристики Web 3.0?
•	децентралізація
•	штучний інтелект та машинне навчання
•	відкритість
•	свобода
•	всюдисутність
•	семантична павутина
8.	Що таке блокчейн?
Блокчейн – це спосіб децентралізованого зберігання інформації.Її можна подати у вигляді ланцюжка даних,розподілених по блоках зі своїми ключами.
9.	Що таке блок в блокчейні?
Блок — це запис у розподіленому реєстрі про кілька транзакцій. У ньому відбито, хто кому і коли переклав якийсь обсяг активів.
10.	Що таке конценсус в блокчейні?
Консенсус блокчейна — це процедура за допомогою якої учасники схвалюють транзакції. Нові транзакції можна реєструвати лише за згодою більшості учасників мережі.
